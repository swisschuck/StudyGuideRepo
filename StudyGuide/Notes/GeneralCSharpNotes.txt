1) Common Language Runtime (CLR) - manages your application.
							     - handles memory managment.
							     - handles operating system and hardware independance.
							     - Language independance (C#, C++, C+, etc).
							     - your application will run on top of the CLR.


2) Framework Class Library (FCL) - A library of functionality to build applications.

 
3) Visual C# compiler (csc) - can be used in the command prompt (csc hello.cs) to run a C# file.

4) The compiler (csc.exe) - visual studio calls this when it complies your code.
						  - it takes your C# code and transforms it into Microsoft Intermediate Language (MSIL) which will then provide instructions to the compiler
						    in a form that the CPU will understand.

5) Assemblies - an assembly is what the C# compiler produces and is just a .net file that contains our complied code.
			  - are basically just files that are stored on disk with a .exe or .dll file extension.
			  - Contain metadata about all types inside.
			  - dll (dynamic link library), which are used by other programs to load the code inside.
			  - GAC (global assembly cache) - a central location to store assemblies for a machine.

6) Project References - Must load assembly into memory before using the types inside.

7) The three pillars of Object Oriented Programming:

	- Encapsulation: Is all about hiding complexity and building models that logically group together functionality. It describes 
					 the idea of bundling data and methods that work on that data within one unit

	- Inheritance: A technique where a class can take on or inherit the members of another class.

	- Polymorphism: Meaning many shapes, one variable can point to different types of objects, objects can behave differently depending on their type.

						 